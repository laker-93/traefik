services:
  traefik:
    image: 'traefik:2.11'
    container_name: 'traefik'
    restart: 'unless-stopped'
    security_opt:
      - no-new-privileges:true
    ports:
      - '443:443/tcp'
      - '443:443/udp'
      - '80:80'
      - '8080:8080'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - ./certs:/etc/certs:ro
      - ./config/dynamic.yml:/etc/traefik/dynamic.yml:ro
      - ./config/static.yml:/etc/traefik/traefik.yml:ro
    networks:
      - proxy

  player:
    image: laker93/player:v1.0.2
    restart: unless-stopped
    container_name: "player"
    labels:
      traefik.enable: "true"
      traefik.docker.network: proxy
      traefik.http.routers.subbox.rule: Host(`docker.localhost`, `www.sub-box.net`)
      traefik.http.services.subbox.loadbalancer.server.port: 9180
      traefik.http.routers.subbox.tls: true
      traefik.http.routers.subbox.middlewares: redirect-non-www-to-www
      traefik.http.middlewares.redirect-non-www-to-www.redirectregex.permanent: true
      traefik.http.middlewares.redirect-non-www-to-www.redirectregex.regex: "^https?://(?:www\\.)?(.+)"
      traefik.http.middlewares.redirect-non-www-to-www.redirectregex.replacement: "https://www.$${1}"
    #user: "501:20"
    networks:
      - proxy
    ports:
      - 9180:9180
    #environment:
      # must add this so player can respond to the path player is to be accessed on via traefik
      #- PUBLIC_PATH="/player"

  browser:
    image: hurlenko/filebrowser
    container_name: filebrowser
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.browser.rule=Host(`browser.docker.localhost`) || PathPrefix(`/browser`)"
      - "traefik.http.services.browser.loadbalancer.server.port=8080"
      - "traefik.http.routers.browser.tls=true"
      - "traefik.http.routers.browser.middlewares=cors2"
      - "traefik.http.middlewares.cors2.headers.accesscontrolallowmethods=*"
      - "traefik.http.middlewares.cors2.headers.accesscontrolalloworiginlist=*"
      - "traefik.http.middlewares.cors2.headers.accesscontrolallowheaders=*"
      - "traefik.http.middlewares.cors2.headers.accesscontrolexposeheaders=Upload-Offset,Upload-Length"
      - "traefik.http.middlewares.cors2.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.cors2.headers.addvaryheader=true"

    networks:
      - proxy
    user: root
    ports:
      - 8081:8080
    volumes:
      - user-updownloads:/data/users:z
      - /Users/lukepurnell/workspace/subbox/docker-compose/filebrowser/config:/config
      - /Users/lukepurnell/workspace/subbox/docker-compose/filebrowser/config/.filebrowser.json:/.filebrowser.json
    environment:
      - FB_BASEURL=/browser
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true

  #slskd:
  #  image: slskd/slskd
  #  container_name: slskd
  #  labels:
  #    - "traefik.enable=true"
  #    - "traefik.http.routers.slskd.rule=Host(`slskd.docker.localhost`) || PathPrefix(`/slskd`)"
  #    - "traefik.http.services.slskd.loadbalancer.server.port=5000"
  #    - "traefik.http.routers.slskd.tls.certresolver=le"
  #  ports:
  #    - "5000:5000"
  #    - "5001:5001"
  #    - "50000:50000"
  #  volumes:
  #    - "/Users/lajp/traefik/slskd/data/:/app"
  #    - type: volume
  #      source: user-updownloads
  #      target: /app
  #      volume:
  #        nocopy: true
  #        subpath: laker93/downloads
  #    - "/Users/lajp/traefik/slskd/music/:/music"
  #  environment:
  #    SLSKD_SHARED_DIR: /music/Petter
  #    SLSKD_URL_BASE: /slskd
  #    SLSKD_HTTP_PORT: 5000
  #    SLSKD_HTTPS_PORT: 5001
  #    SLSKD_SLSK_LISTEN_PORT: 50000
  #  restart: always

  #subbox:
  #  image: laker93/subbox-landing:latest
  #  restart: unless-stopped
  #  container_name: subbox
  #  labels:
  #    traefik.enable: "true"
  #    traefik.docker.network: proxy
  #    traefik.http.routers.subbox.rule: Host(`docker.localhost`, `www.sub-box.net`)
  #    traefik.http.services.subbox.loadbalancer.server.port: 8888
  #    traefik.http.routers.subbox.tls: true
  #    traefik.http.routers.subbox.middlewares: redirect-non-www-to-www
  #    traefik.http.middlewares.redirect-non-www-to-www.redirectregex.permanent: true
  #    traefik.http.middlewares.redirect-non-www-to-www.redirectregex.regex: "^https?://(?:www\\.)?(.+)"
  #    traefik.http.middlewares.redirect-non-www-to-www.redirectregex.replacement: "https://www.$${1}"
  #  ports:
  #    - 8888:8888
  #  environment:
  #    - APP_ENVIRONMENT=prod
  #  networks:
  #    - proxy

  pymix:
    image: laker93/pymixdev:v1.1.30
    privileged: true
    restart: unless-stopped
    container_name: pymix
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.pymix.rule=Host(`pymix.docker.localhost`) || PathPrefix(`/pymix`)"
      - "traefik.http.services.pymix.loadbalancer.server.port=8002"
      - "traefik.http.routers.pymix.tls=true"
    ports:
      - 8002:8002
    volumes:
      - ./db:/pymix/db
      - user-updownloads:/user-updownloads
      - private-music:/private-music
      - private-staged:/private-staged
      - public-staged:/public-staged
      - /Users/lukepurnell/workspace/subbox:/subbox
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - proxy
    environment:
      - APP_ENVIRONMENT=prod

networks:
  proxy:
    external: true

volumes:
  user-updownloads:
    driver: local
    name: user-updownloads
  private-staged:
    driver: local
    name: private-staged
  private-music:
    driver: local
    name: private-music
  public-music:
    driver: local
    name: public-music
  public-staged:
    driver: local
    name: public-staged
